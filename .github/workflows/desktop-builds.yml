name: Build and Release Executable

on:
  push:
    branches:
      - dev

permissions:
  contents: write
  id-token: write

env:
  PYTHON_VERSION: 3.12.6

jobs:
  build-windows:
    runs-on: windows-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Setup Python ${{ env.PYTHON_VERSION }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pyinstaller
          pip install -r requirements.txt

      - name: Build executable with PyInstaller
        run: pyinstaller --onefile --noconsole --icon=./GUI-ver/icon.ico ./GUI-ver/GUI.py

      - name: Zip executable and folders
        run: |
          mkdir release
          cp -r ./dist/GUI.exe ./release/
          cp -r ./GUI-ver/subs ./release/
          powershell Compress-Archive -Path ./release/* -DestinationPath ./release/XC-windows.zip

      - name: Upload Release Asset
        uses: actions/upload-artifact@v3
        with:
          name: windows-release
          path: ./release/XC-windows.zip

  build-linux:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Setup Python ${{ env.PYTHON_VERSION }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pyinstaller
          pip install -r requirements.txt

      - name: Build executable with PyInstaller
        run: pyinstaller --onefile --noconsole --icon=./GUI-ver/icon.ico ./GUI-ver/GUI.py

      - name: Zip executable and folders
        run: |
          mkdir release
          cp -r ./dist/GUI ./release/
          cp -r ./GUI-ver/subs ./release/
          zip -r ./release/XC-linux.zip ./release/

      - name: Upload Release Asset
        uses: actions/upload-artifact@v3
        with:
          name: linux-release
          path: ./release/XC-linux.zip

  build-fedora:
    runs-on: fedora-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Python ${{ env.PYTHON_VERSION }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Install binutils
        run: sudo dnf install -y binutils

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pyinstaller
          pip install -r requirements.txt

      - name: Build executable with PyInstaller
        run: pyinstaller --onefile --noconsole --icon=./GUI-ver/icon.ico ./GUI-ver/GUI.py

      - name: Zip executable and folders
        run: |
          mkdir release
          cp -r ./dist/GUI ./release/
          cp -r ./GUI-ver/subs ./release/
          zip -r ./release/XC-fedora.zip ./release/

      - name: Upload Release Asset
        uses: actions/upload-artifact@v3
        with:
          name: fedora-release
          path: ./release/XC-fedora.zip

  build-macos:
    runs-on: macos-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Setup Python ${{ env.PYTHON_VERSION }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pyinstaller
          pip install pillow
          pip install -r requirements.txt

      - name: Build executable with PyInstaller
        run: pyinstaller --onefile --noconsole --icon=./GUI-ver/icon.ico ./GUI-ver/GUI.py

      - name: Zip executable and folders
        run: |
          mkdir release
          cp -r ./dist/GUI ./release/
          cp -r ./GUI-ver/subs ./release/
          zip -r ./release/XC-macos.zip ./release/

      - name: Upload Release Asset
        uses: actions/upload-artifact@v3
        with:
          name: macos-release
          path: ./release/XC-macos.zip

  github-release:
    name: Upload to GitHub Release
    needs: [build-windows, build-linux, build-fedora, build-macos]
    runs-on: ubuntu-latest

    permissions:
      contents: write
      id-token: write

    steps:
      - name: Install GitHub CLI
        run: sudo apt-get install gh

      - name: Download Release Assets
        uses: actions/download-artifact@v3
        with:
          name: windows-release
          path: ./release/windows/

      - name: Download Release Assets
        uses: actions/download-artifact@v3
        with:
          name: linux-release
          path: ./release/linux/

      - name: Download Release Assets
        uses: actions/download-artifact@v3
        with:
          name: fedora-release
          path: ./release/fedora/

      - name: Download Release Assets
        uses: actions/download-artifact@v3
        with:
          name: macos-release
          path: ./release/macos/

      - name: Create GitHub Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: >-
          gh release create
          "v4.1-${{ github.run_number }}"
          --repo "${{ github.repository }}"
          --notes ""
          --prerelease
          --generate-notes
          --title "Release v4.1-${{ github.run_number }}"

      - name: Upload artifacts to GitHub Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: >-
          gh release upload
          "v4.1-${{ github.run_number }}"
          ./release/windows/XC-windows.zip
          --repo "${{ github.repository }}"
          
          gh release upload
          "v4.1-${{ github.run_number }}"
          ./release/linux/XC-linux.zip
          --repo "${{ github.repository }}"
          
          gh release upload
          "v4.1-${{ github.run_number }}"
          ./release/fedora/XC-fedora.zip
          --repo "${{ github.repository }}"
          
          gh release upload
          "v4.1-${{ github.run_number }}"
          ./release/macos/XC-macos.zip
          --repo "${{ github.repository }}"
