name: Build and Release Executable

on:
  push:
    branches:
      - dev

permissions:
  contents: write
  id-token: write

env:
  PYTHON_VERSION: 3.12.6

jobs:
  build-windows:
    runs-on: windows-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Setup Python ${{ env.PYTHON_VERSION }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pyinstaller
          pip install -r requirements.txt

      - name: Build executable with PyInstaller
        run: pyinstaller --onefile --noconsole --icon=./GUI-ver/icon.ico ./GUI-ver/flet-ui.py

      - name: Zip executable and folders
        run: |
          mkdir release
          cp -r ./dist/flet-ui.exe ./release/
          cp -r ./core ./release/
          cp -r ./GUI-ver/subs ./release/
          powershell Compress-Archive -Path ./release/* -DestinationPath ./release/XC-windows.zip

  github-release:
    name: Upload to GitHub Release
    needs: build-windows
    runs-on: ubuntu-latest

    permissions:
      contents: write
      id-token: write

    steps:
      - name: Download Release Asset
        uses: actions/download-artifact@v3
        with:
          name: release
          path: ./release/

      - name: Create GitHub Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: >-
          gh release create
          "v1.0-${{ github.run_number }}"
          --repo "${{ github.repository }}"
          --notes ""
          --prerelease
          --generate-notes
          --title "Release v1.0-${{ github.run_number }}"

      - name: Upload artifacts to GitHub Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: >-
          gh release upload
          "v1.0-${{ github.run_number }}"
          ./release/XC-windows.zip
          --repo "${{ github.repository }}"
